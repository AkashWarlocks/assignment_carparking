{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.module.ts","webpack:///src/app/exitvehichle/exitvehichle.component.ts","webpack:///src/app/exitvehichle/exitvehichle.component.html","webpack:///src/app/header-component/header-component.component.ts","webpack:///src/app/header-component/header-component.component.html","webpack:///src/app/home-component/home-component.component.ts","webpack:///src/app/home-component/home-component.component.html","webpack:///src/app/level/level.component.ts","webpack:///src/app/level/level.component.html","webpack:///src/app/services/http.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","appRoutes","path","redirectTo","pathMatch","component","AppRoutes","useHash","ExitvehichleComponent","httpService","parkedData","totalVehicle","search","api","data","carType","currentVehicle","searchVehicle","vehicleNo","getParkedData","getVehicleCount","httpPost","subscribe","res","Motorcycle","Car","Bus","Total","console","log","spot","alert","HeaderComponentComponent","HomeComponentComponent","HttpService","currentPark","levelNo","rowNo","slotNo","vehicleType","slotType","entryForm","exitForm","value","status","slots","vehicletype","allotParking","print","getSinglevehicle","LevelComponent","addLevelForm","totalRows","motorCylceSlots","compactSlots","largeSlots","addLevel","http","post","pipe","response","err","providedIn","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'parking-frontend';\n}\n","<header>\n  <app-header-component></app-header-component>\n</header>\n<section class=\"container\">\n  <router-outlet></router-outlet>\n</section>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutes } from './app.routing.module';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponentComponent } from './header-component/header-component.component';\nimport { HomeComponentComponent } from './home-component/home-component.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpService } from './services/http.service';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LevelComponent } from './level/level.component';\nimport { ExitvehichleComponent } from './exitvehichle/exitvehichle.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponentComponent,\n    HomeComponentComponent,\n    LevelComponent,\n    ExitvehichleComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AppRoutes,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponentComponent } from './home-component/home-component.component';\r\nimport { ExitvehichleComponent } from './exitvehichle/exitvehichle.component';\r\nimport { LevelComponent } from './level/level.component';\r\n\r\nconst appRoutes: Routes =[\r\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\r\n  { path: 'home', component:HomeComponentComponent },\r\n  { path: 'exit', component:ExitvehichleComponent},\r\n  { path: 'level', component:LevelComponent}\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(appRoutes, { useHash: false })],\r\n  exports: [RouterModule],\r\n})\r\n\r\nexport class AppRoutes {}\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../services/http.service';\nimport { FormGroup,FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-exitvehichle',\n  templateUrl: './exitvehichle.component.html',\n  styleUrls: ['./exitvehichle.component.css']\n})\n\nexport class ExitvehichleComponent implements OnInit {\n  parkedData:any = []\n  searchVehicle:FormGroup\n  totalVehicle = {\n    \"Motorcycle\":0,\n    \"Car\":0,\n    \"Bus\":0,\n    \"Total\":0\n  }\n  search = {\n    api:\"getParkedData\",\n    data:{\n      carType:\"ALL\"\n    }\n  }\n  currentVehicle:any = {}\n  constructor(private httpService:HttpService) { }\n\n  ngOnInit(): void {\n\n    this.searchVehicle = new FormGroup({\n      vehicleNo: new FormControl('')\n    })\n\n    this.getParkedData(this.search)\n    this.getVehicleCount()\n\n  }\n\n  getVehicleCount(){\n    let data = {\n      api:\"getVehicleCount\",\n      data:\"Give me count\"\n    }\n    this.httpService.httpPost(data).subscribe((res)=>{\n      this.totalVehicle.Motorcycle = res.Motorcycle;\n      this.totalVehicle.Car = res.Car\n      this.totalVehicle.Bus = res.Bus\n      this.totalVehicle.Total = res.Total\n\n    })\n\n  }\n  getParkedData(data){\n    this.httpService.httpPost(data).subscribe((res)=>{\n      this.parkedData = res\n      console.log(\"level no \",this.parkedData)\n    })\n  }\n\n  emptySlot(spot){\n    console.log(spot)\n    let data = {\n      api:\"deAllocateSpot\",\n      data:spot\n    }\n    this.httpService.httpPost(data).subscribe((res)=>{\n      console.log(res)\n      alert(\"vehicle exited\")\n    })\n    this.getParkedData(this.search)\n    this.getVehicleCount()\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\" style=\"background: #cfc48c;\">\n          <h2 class=\"form-heading text-center\">Current Count of Vehicles</h2>\n        </div>\n        <div class=\"card-body\">\n          <table class=\"table\">\n            <thead class=\"thead-dark\">\n              <tr>\n                <th>Motorcycle</th>\n                <th>Car</th>\n                <th>Bus</th>\n                <th>Total</th>\n              </tr>\n            </thead>\n            <tbody>\n              <td>{{totalVehicle.Motorcycle}}</td>\n              <td>{{totalVehicle.Car}}</td>\n              <td>{{totalVehicle.Bus}}</td>\n              <td>{{totalVehicle.Total}}</td>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n  <hr />\n<div class=\"row\">\n  <div class=\"col-12\">\n    <div class=\"card\">\n      <div class=\"card-header\" style=\"background: #cfc48c;\">\n        <h2 class=\"form-heading-2 text-center\">EXIT PARKED VEHICLES</h2>\n      </div>\n      <div class=\"card-body\">\n        <table class=\"table\">\n          <thead class=\"thead-dark\">\n            <tr>\n               <th>#ID</th>\n               <th>LevelNo</th>\n               <th>RowNo</th>\n               <th>SlotNo</th>\n               <th>Vehicle</th>\n               <th>Action</th>\n            </tr>\n         </thead>\n         <tbody>\n            <tr *ngFor=\"let item of parkedData; let i = index\">\n               <th>{{ i+1 }}</th>\n               <td>{{ item.levelNo }}</td>\n               <td>{{ item.rowNo }}</td>\n               <td>{{ item.slots.slotNo}}</td>\n               <td>{{ item.slots.vehicleNo }}</td>\n               <td>\n                  <button class =\"btn btn-danger\" (click)=\"emptySlot(item)\" >Exit</button>\n               </td>\n            </tr>\n         </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header-component',\n  templateUrl: './header-component.component.html',\n  styleUrls: ['./header-component.component.css']\n})\nexport class HeaderComponentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"header\">\n  <a routerLink='/home' class=\"logo\">VEHICLE PARKING SYSTEM</a>\n  <div class=\"header-right\">\n    <a class=\"active\" routerLink='/home'>Home</a>\n    <a routerLink='/exit'>Exit Module</a>\n    <a routerLink='/level'>Level Module</a>\n  </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { HttpService } from '../services/http.service';\n\n@Component({\n  selector: 'app-home-component',\n  templateUrl: './home-component.component.html',\n  styleUrls: ['./home-component.component.css']\n})\nexport class HomeComponentComponent implements OnInit {\n  entryForm:FormGroup;\n  exitForm:FormGroup\n  currentPark:any = {}\n  searchVehicle:FormGroup\n  currentVehicle:any = {\n    levelNo:0,\n    rowNo:0,\n    slotNo:0,\n    vehicleType:\"\",\n    slotType:\"\",\n  }\n\n  constructor(private HttpService:HttpService) { }\n\n  ngOnInit(): void {\n    this.entryForm = new FormGroup({\n      carType: new FormControl('Motorcycle'),\n      vehicleNo: new FormControl('')\n    })\n    this.exitForm = new FormGroup({\n      carType:new FormControl(''),\n      levelNo:new FormControl(''),\n      rowNo: new FormControl(''),\n      slotNo:new FormControl(''),\n    })\n    this.searchVehicle = new FormGroup({\n      vehicleNo: new FormControl('')\n    })\n\n  }\n\n  allotParking(){\n    const data = {\n      api:\"allotparking\",\n      data:{\n        carType:this.entryForm.value.carType,\n        vehicleNo:this.entryForm.value.vehicleNo\n      }\n    }\n    this.HttpService.httpPost(data).subscribe((res)=>{\n      console.log(\"allot\",res)\n      this.currentPark.status= res.status\n      this.currentPark.levelNo = res.levelNo\n      this.currentPark.rowNo = res.rowNo\n      this.currentPark.slotNo = res.slotNo\n      this.currentPark.vehicleType = res.slots.vehicletype\n      this.currentPark.slotType = res.slots.slotType\n    })\n  }\n  print(){\n\n  }\n  getSinglevehicle(){\n    const data = {\n      api:\"getVehicleDetails\",\n      data:{\n        vehicleNo:this.searchVehicle.value.vehicleNo,\n      }\n    }\n    this.HttpService.httpPost(data).subscribe((res)=>{\n      console.log(res)\n      this.currentVehicle = res\n    })\n  }\n\n\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n         <h2 class=\"form-heading-2 text-center\">PARKING ALLOTMENT AND DE-ALLOTMENT</h2>\n        </div>\n         <div class=\"card-body\">\n           <div class=\"row\">\n            <div class=\"col-sm-6\">\n              <div class=\"card\">\n                <div class=\"card-header\" style=\"background: #cfc48c;\">\n                 <h5 class=\"form-heading-2 text-center\">ENTRY</h5>\n                </div>\n                <div class=\"card-body\">\n                  <form class=\"form login-form\" (submit)=\"allotParking()\" [formGroup]=\"entryForm\">\n                    <label for=\"carType\" class=\"Input-label\">Select Car Type</label>\n                    <select class=\"form-control\" formControlName=\"carType\" placeholder=\"Select Car Type\">\n                      <option value=\"Motorcycle\">Motorcycle</option>\n                      <option value=\"Car\">Car</option>\n                      <option value=\"Bus\">Bus</option>\n                    </select>\n                    <hr />\n                    <label for = \"vehicleNo\">Vehicle Number</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"vehicleNo\" placeholder=\"Enter Vehicle Number\">\n\n                    <hr />\n                    <button type=\"submit\" class=\"btn btn-primary float-right\">\n                      Submit\n                    </button>\n                  </form>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-6\">\n              <div class=\"card\">\n                <div class=\"card-header background \" style=\"background: #cfc48c;\">\n                 <h5 class=\"form-heading-2 text-center p-1\">Ticket Details</h5>\n                </div>\n                <div class=\"card-body\">\n                  <form class=\"form login-form\"  (submit)=\"print()\" [formGroup]=\"exitForm\">\n                    <label for=\"carType\" class=\"Input-label\">Status: {{this.currentPark.status}}</label>\n                    <hr />\n                    <label>Level Number: {{this.currentPark.levelNo}}</label>\n                    <hr />\n                    <label>Row Number: {{this.currentPark.rowNo}}</label>\n                    <hr />\n                    <label>Slot Number:{{this.currentPark.slotNo}}</label>\n                    <hr />\n\n                    <button type=\"submit\" class=\"btn btn-danger float-right\">\n                      Print\n                    </button>\n                  </form>\n                </div>\n              </div>\n            </div>\n           </div>\n         </div>\n      </div>\n      <div class=\"card\">\n        <div class=\"card-header\">\n\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card\">\n        <div class=\"card-header\" style=\"background: #cfc48c;\">\n          <h2 class=\"form-heading-2 text-center\">Search Vehicle By Number</h2>\n        </div>\n        <div class=\"card-body\">\n          <div class=\"card-body\">\n            <div class=\"row\">\n             <div class=\"col-sm-6\">\n               <div class=\"card\">\n                 <div class=\"card-header\" style=\"background: #cfc48c;\">\n                  <h5 class=\"form-heading-2 text-center\">ENTRY</h5>\n                 </div>\n                 <div class=\"card-body\">\n                   <form class=\"form login-form\" (submit)=\"getSinglevehicle()\" [formGroup]=\"searchVehicle\">\n                     <label for = \"vehicleNo\">Vehicle Number</label>\n                     <input type=\"text\" class=\"form-control\" formControlName=\"vehicleNo\" placeholder=\"Enter Vehicle Number\">\n                     <hr />\n                     <button type=\"submit\" class=\"btn btn-primary float-right\">\n                       Submit\n                     </button>\n                   </form>\n                 </div>\n               </div>\n             </div>\n             <div class=\"col-sm-6\">\n               <div class=\"card\">\n                 <div class=\"card-header background \" style=\"background: #cfc48c;\">\n                  <h5 class=\"form-heading-2 text-center p-1\">Ticket Details</h5>\n                 </div>\n                 <div class=\"card-body\">\n\n                     <label for=\"carType\" class=\"Input-label\">Status: {{this.currentVehicle.status}}</label>\n                     <hr />\n                     <label>Level Number: {{this.currentVehicle.levelNo}}</label>\n                     <hr />\n                     <label>Row Number: {{this.currentVehicle.rowNo}}</label>\n                     <hr />\n                     <label>Slot Number:{{this.currentVehicle.slotNo}}</label>\n                     <hr />\n\n                    <!-- <button type=\"submit\" class=\"btn btn-danger float-right\" (onClick)=\"emptySlot(this.currentVehicle.data[0])\">\n                       Exit\n                     </button>-->\n\n                 </div>\n               </div>\n             </div>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../services/http.service';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-level',\n  templateUrl: './level.component.html',\n  styleUrls: ['./level.component.css']\n})\nexport class LevelComponent implements OnInit {\n\n  addLevelForm:FormGroup\n\n  constructor(private httpService:HttpService) { }\n\n  ngOnInit(): void {\n\n\n    this.addLevelForm = new FormGroup({\n      levelNo:new FormControl(''),\n      totalRows:new FormControl(''),\n      motorCylceSlots:new FormControl(''),\n      compactSlots:new FormControl(''),\n      largeSlots:new FormControl('')\n    })\n  }\n  addLevel(){\n\n  }\n  getLevel(data){\n    this.httpService.httpPost(data).subscribe((res)=>{\n      console.log(data)\n    })\n  }\n\n}\n","<div class=\"com\">\n  <div class=\"card\">\n    <div class=\"card-header\" >\n      <h2 class=\"form-heading 2 text-center\">ADD LEVEL</h2>\n    </div>\n    <div class=\"card-body\">\n      <form class=\"form login-form\" (submit)=\"addLevel()\" [formGroup]=\"addLevelForm\">\n        <label>Current Avialable Level</label>\n\n      </form>\n    </div>\n  </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn : \"root\"\r\n})\r\nexport class HttpService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public httpPost(data: any) : any {\r\n    return this.http.post(\"/\"+data.api, data.data)\r\n    .pipe(\r\n      map((response: any)=>{\r\n          //console.log(response);\r\n          return response;\r\n      }),\r\n      catchError(err => {\r\n          console.log(err)\r\n          return throwError(\"SOMETHING BAD HAPPENED\");\r\n      })\r\n    );;\r\n\r\n  }\r\n\r\n  public httpImagePost(api: string, data: any) : any {\r\n    return this.http.post(\"http://localhost:3000/\"+api, data)\r\n    .pipe(\r\n      map((response: any)=>{\r\n          return response;\r\n      }),\r\n      catchError(err => {\r\n          console.log(err)\r\n          return throwError(\"SOMETHING BAD HAPPENED\");\r\n      })\r\n    );;\r\n\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}